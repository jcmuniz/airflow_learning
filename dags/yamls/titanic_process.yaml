apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: job-pyspark-{{ macros.datetime.now().strftime("%Y-%m-%d-%H-%M-%S") }}
  namespace: airflow
spec:
  volumes:
    - name: ivy
      emptyDir: {}
  sparkConf:
    spark.jars.packages: "com.amazonaws:aws-java-sdk:1.7.4,org.apache.hadoop:hadoop-aws:2.7.4"
    spark.driver.extraJavaOptions: "-Dcom.amazonaws.services.s3.enableV4=true,-Divy.cache.dir=/tmp -Divy.home=/tmp"
    spark.executor.extraJavaOptions: "-Dcom.amazonaws.services.s3.enableV4=true"
    spark.hadoop.fs.s3a.endpoint: "s3.us-east-2.amazonaws.com"
    spark.kubernetes.allocation.batch.size: "10"
  hadoopConf:
    fs.s3a.impl: org.apache.hadoop.fs.s3a.S3AFileSystem
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "julianomuniz/spark-operator:v3.0.0-aws"
  # imagePullPolicy -> Always, IfNotPresent, Never
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "s3a://jarvis-cluster-bucket/pyspark/job_processing.py"
  sparkVersion: "3.0.0"
  restartPolicy:
    type: Never
  driver:
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:
        name: aws-credentials
        key: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        name: aws-credentials
        key: aws_secret_access_key
    cores: 1
    coreLimit: "1200m"
    memory: "2g"
    labels:
      version: 3.0.0
    serviceAccount: airflow-1-1633679699-worker
    volumeMounts:
      - name: ivy
        mountPath: /tmp
  executor:
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:
        name: aws-credentials
        key: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        name: aws-credentials
        key: aws_secret_access_key
    cores: 1
    instances: 2
    coreLimit: "1000m"
    memory: "2g"
    labels:
      version: 3.0.0
    volumeMounts:
      - name: ivy
        mountPath: /tmp