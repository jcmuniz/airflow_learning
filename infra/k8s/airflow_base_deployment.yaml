apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-base-deployment
  labels:
    app: airflowBase
spec:
  selector:
    matchLabels:
      app: airflowBase
  replicas: 1
  template:
    metadata:
      name: airflowBase-pod
      labels:
        app: airflowBase
    spec:
      containers:
    
      - name: airflow
        image: julianomuniz/airflow:2.1.3
        envFrom:
          - configMapRef:
              name: airflow-env-config
        ports:
          - containerPort: 8080
        args: ['webserver']

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-env-config
data:
  AIRFLOW__CORE__EXECUTOR: 'CeleryExecutor'
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@airflow-db-service/airflow'
  AIRFLOW__CELERY__RESULT_BACKEND: 'db+postgresql://airflow:airflow@airflow-db-service/airflow'
  AIRFLOW__CELERY__BROKER_URL: 'redis://:airflow@airflow-db-service:6379/0'
  AIRFLOW__CORE__FERNET_KEY: 'GQfGmdgZR52xP8D5XQkGBw6EEFOMjfcL3BA59l1GXws='
  AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
  AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
  AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
  _AIRFLOW_WWW_USER_USERNAME: 'airflow'
  _AIRFLOW_WWW_USER_PASSWORD: 'airflow'
  _AIRFLOW_DB_UPGRADE: 'true'
  _AIRFLOW_WWW_USER_CREATE: 'true'

---

apiVersion: v1
kind: Service
metadata:
  name: airflow-base-service
spec:
  selector:
    app: airflowBase
  ports:
    - name: airflow
      protocol: TCP
      port: 8080
      targetPort: 8080