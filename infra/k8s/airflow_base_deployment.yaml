apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-base-deployment
  labels:
    app: airflowBase
spec:
  selector:
    matchLabels:
      app: airflowBase
  replicas: 1
  template:
    metadata:
      name: airflowBase-pod
      labels:
        app: airflowBase
    spec:
      containers:
    
      - name: airflow
        image: julianomuniz/airflow:2.1.3
        env:
          - name: AIRFLOW__CORE__EXECUTOR
            value: 'CeleryExecutor'
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            value: 'postgresql+psycopg2://airflow:airflow@airflow-db-service/airflow'
          - name: AIRFLOW__CELERY__RESULT_BACKEND
            value: 'db+postgresql://airflow:airflow@airflow-db-service/airflow'
          - name: AIRFLOW__CELERY__BROKER_URL
            value: 'redis://:airflow@airflow-db-service:6379/0'
          - name: AIRFLOW__CORE__FERNET_KEY
            value: 'GQfGmdgZR52xP8D5XQkGBw6EEFOMjfcL3BA59l1GXws='
          - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
            value: 'true'
          - name: AIRFLOW__CORE__LOAD_EXAMPLES
            value: 'true'
          - name: AIRFLOW__API__AUTH_BACKEND
            value: 'airflow.api.auth.backend.basic_auth'
          - name: _AIRFLOW_WWW_USER_USERNAME
            value: 'airflow'
          - name: _AIRFLOW_WWW_USER_PASSWORD
            value: 'airflow'
          - name: _AIRFLOW_DB_UPGRADE
            value: 'true'
          - name: _AIRFLOW_WWW_USER_CREATE
            value: 'true'
        ports:
          - containerPort: 8080
        args: ['webserver']
        #command:
        #  - 'airflow db init'
        #  - 'airflow webserver'

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-base-service
spec:
  selector:
    app: airflowBase
  ports:
    - name: airflow
      protocol: TCP
      port: 8080
      targetPort: 8080